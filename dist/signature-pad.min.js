var SignaturePad=(()=>{var u=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var y=Object.prototype.hasOwnProperty;var x=(a,t)=>{for(var i in t)u(a,i,{get:t[i],enumerable:!0})},w=(a,t,i,e)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of m(t))!y.call(a,s)&&s!==i&&u(a,s,{get:()=>t[s],enumerable:!(e=f(t,s))||e.enumerable});return a};var v=a=>w(u({},"__esModule",{value:!0}),a);var _={};x(_,{default:()=>S});var p=class{constructor(t,i={}){if(!t||!(t instanceof HTMLElement))throw new Error("SignaturePad: Container must be a valid HTMLElement");this.container=t,this.opts=Object.assign({background:"#fff",color:"#000",thickness:2,guideline:!1,guidelineColor:"#a0a0a0",guidelineOffset:50,guidelineIndent:10,disableResize:!1,undoLimit:50,syncField:null,syncFormat:"JSON",svgStyles:!1,smoothing:!0,smoothingFactor:.5,onChange:null,onStrokeStart:null,onStrokeEnd:null},i),this._validateOptions(),this.lines=[],this.redoStack=[],this.isDrawing=!1,this.points=[],this._resizeTimeout=null,this._initCanvas(),this._attachEvents(),this.opts.disableResize||window.addEventListener("resize",this._debouncedResize.bind(this)),this.clear(!1)}_validateOptions(){if(this.opts.undoLimit<1)throw new Error("SignaturePad: undoLimit must be at least 1");if(this.opts.thickness<.1)throw new Error("SignaturePad: thickness must be at least 0.1");if(this.opts.smoothingFactor<0||this.opts.smoothingFactor>1)throw new Error("SignaturePad: smoothingFactor must be between 0 and 1")}_debouncedResize(){this._resizeTimeout&&clearTimeout(this._resizeTimeout),this._resizeTimeout=setTimeout(()=>{this._resizeCanvas()},150)}_initCanvas(){try{if(this.canvas=document.createElement("canvas"),this.container.innerHTML="",this.container.appendChild(this.canvas),this.ctx=this.canvas.getContext("2d"),!this.ctx)throw new Error("Failed to get 2D context from canvas");this._resizeCanvas(),this.ctx.lineCap="round",this.ctx.lineJoin="round"}catch(t){throw new Error(`SignaturePad: Failed to initialize canvas - ${t.message}`)}}_resizeCanvas(){try{let{width:t,height:i}=this.container.getBoundingClientRect();if(t===0||i===0){console.warn("SignaturePad: Container has zero dimensions");return}let e=null;if(this.canvas&&this.canvas.width>0&&this.canvas.height>0)try{e=this.canvas.toDataURL()}catch{}if(this.canvas.width=t,this.canvas.height=i,this.ctx=this.canvas.getContext("2d"),this.ctx.lineCap="round",this.ctx.lineJoin="round",this._drawBackground(),e){let s=new Image;s.onload=()=>{this.ctx.drawImage(s,0,0)},s.onerror=()=>{this._redrawLines()},s.src=e}}catch(t){console.error("SignaturePad: Error resizing canvas:",t)}}_attachEvents(){this.canvas.addEventListener("pointerdown",this._startStroke.bind(this)),this.canvas.addEventListener("pointermove",this._continueStroke.bind(this)),document.addEventListener("pointerup",this._endStroke.bind(this)),document.addEventListener("pointercancel",this._endStroke.bind(this)),this.canvas.addEventListener("touchstart",t=>t.preventDefault()),this.canvas.addEventListener("touchmove",t=>t.preventDefault()),this.canvas.addEventListener("touchend",t=>t.preventDefault())}_startStroke(t){t.preventDefault(),this.isDrawing=!0,this.points=[];let i=this._getPointFromEvent(t);this._addPoint(i.x,i.y,i.pressure),typeof this.opts.onStrokeStart=="function"&&this.opts.onStrokeStart(this)}_continueStroke(t){if(!this.isDrawing)return;t.preventDefault();let i=this._getPointFromEvent(t);this._addPoint(i.x,i.y,i.pressure),this.points.length>=2&&this._drawSmoothLine()}_endStroke(){this.isDrawing&&(this.isDrawing=!1,this.points.length===1&&this._drawDot(this.points[0]),this.points.length>0&&(this.lines.push([...this.points]),this.lines.length>this.opts.undoLimit&&this.lines.shift(),this.redoStack=[],this._triggerChange()),typeof this.opts.onStrokeEnd=="function"&&this.opts.onStrokeEnd(this))}_getPointFromEvent(t){let i=this.canvas.getBoundingClientRect();return{x:t.clientX-i.left,y:t.clientY-i.top,pressure:t.pressure||.5}}_addPoint(t,i,e=.5){let s={x:t,y:i,pressure:e};if(this.opts.smoothing&&this.points.length>0){let r=this.points[this.points.length-1],n=this.opts.smoothingFactor;s.x=r.x+(s.x-r.x)*n,s.y=r.y+(s.y-r.y)*n}this.points.push(s)}_drawSmoothLine(){let t=this.points,i=t.length;if(!(i<2)){if(this.ctx.strokeStyle=this.opts.color,this.ctx.lineWidth=this._getLineWidth(t[i-1]),this.ctx.beginPath(),i===2)this.ctx.moveTo(t[0].x,t[0].y),this.ctx.lineTo(t[1].x,t[1].y);else{let e=t[i-3],s=t[i-2],r=t[i-1];this.ctx.moveTo(e.x,e.y),this.ctx.quadraticCurveTo(s.x,s.y,(s.x+r.x)/2,(s.y+r.y)/2)}this.ctx.stroke()}}_drawDot(t){let i=this._getLineWidth(t)/2;this.ctx.beginPath(),this.ctx.arc(t.x,t.y,i,0,2*Math.PI),this.ctx.fillStyle=this.opts.color,this.ctx.fill()}_getLineWidth(t){let i=this.opts.thickness,e=t.pressure||.5;return i*(.5+e)}_drawBackground(){if(this.ctx)try{this.ctx.fillStyle=this.opts.background,this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.opts.guideline&&this._drawGuideline()}catch(t){console.error("SignaturePad: Error drawing background:",t)}}_drawGuideline(){let t=this.canvas.height-this.opts.guidelineOffset;this.ctx.save(),this.ctx.strokeStyle=this.opts.guidelineColor,this.ctx.lineWidth=1,this.ctx.setLineDash([5,5]),this.ctx.beginPath(),this.ctx.moveTo(this.opts.guidelineIndent,t),this.ctx.lineTo(this.canvas.width-this.opts.guidelineIndent,t),this.ctx.stroke(),this.ctx.restore()}_redrawLines(){if(this.ctx)try{if(this._drawBackground(),this.lines.length===0)return;this.ctx.save(),this.ctx.strokeStyle=this.opts.color,this.ctx.lineCap="round",this.ctx.lineJoin="round";for(let t of this.lines)if(t.length!==0)if(t.length===1){let i=t[0],e=this._getLineWidth(i)/2;this.ctx.beginPath(),this.ctx.arc(i.x,i.y,e,0,2*Math.PI),this.ctx.fillStyle=this.opts.color,this.ctx.fill()}else this._redrawSmoothLine(t);this.ctx.restore()}catch(t){console.error("SignaturePad: Error redrawing lines:",t)}}_redrawSmoothLine(t){if(!(t.length<2)){if(this.ctx.lineWidth=this.opts.thickness,this.ctx.beginPath(),this.ctx.moveTo(t[0].x,t[0].y),t.length===2)this.ctx.lineTo(t[1].x,t[1].y);else{for(let e=1;e<t.length-1;e++){let s=t[e],r=t[e+1],n=(s.x+r.x)/2,l=(s.y+r.y)/2;this.ctx.quadraticCurveTo(s.x,s.y,n,l)}let i=t[t.length-1];this.ctx.lineTo(i.x,i.y)}this.ctx.stroke()}}_triggerChange(){try{if(this.opts.syncField){let t;switch(this.opts.syncFormat.toUpperCase()){case"PNG":t=this.toDataURL("image/png");break;case"JPG":case"JPEG":t=this.toDataURL("image/jpeg");break;case"SVG":t=this.toSVG();break;default:t=this.toJSON()}this.opts.syncField.value=t}typeof this.opts.onChange=="function"&&this.opts.onChange(this)}catch(t){console.error("SignaturePad: Error in change callback:",t)}}clear(t=!0){return this.lines=[],this.redoStack=[],this._drawBackground(),t&&this._triggerChange(),this}undo(){if(this.lines.length===0)return this;let t=this.lines.pop();return this.redoStack.push(t),this.redoStack.length>this.opts.undoLimit&&this.redoStack.shift(),this._redrawLines(),this._triggerChange(),this}redo(){if(this.redoStack.length===0)return this;let t=this.redoStack.pop();return this.lines.push(t),this._redrawLines(),this._triggerChange(),this}isEmpty(){return this.lines.length===0}toJSON(){try{return JSON.stringify({lines:this.lines,version:"1.2.0",timestamp:Date.now()})}catch(t){return console.error("SignaturePad: Error exporting to JSON:",t),'{"lines":[],"error":"Export failed"}'}}toDataURL(t="image/png",i){try{return this.canvas.toDataURL(t,i)}catch(e){return console.error("SignaturePad: Error exporting to data URL:",e),""}}toSVG(){try{let{background:t,color:i,thickness:e,svgStyles:s}=this.opts,{width:r,height:n}=this.canvas,l=s?`style="fill:${t};"`:`fill="${t}"`,d=s?`style="fill:none;stroke:${i};stroke-width:${e};stroke-linecap:round;stroke-linejoin:round;"`:`fill="none" stroke="${i}" stroke-width="${e}" stroke-linecap="round" stroke-linejoin="round"`,o=`<svg xmlns="http://www.w3.org/2000/svg" width="${r}" height="${n}" viewBox="0 0 ${r} ${n}">`;if(o+=`<rect ${l} x="0" y="0" width="${r}" height="${n}"/>`,this.opts.guideline){let h=n-this.opts.guidelineOffset,c=s?`style="stroke:${this.opts.guidelineColor};stroke-width:1;stroke-dasharray:5,5;"`:`stroke="${this.opts.guidelineColor}" stroke-width="1" stroke-dasharray="5,5"`;o+=`<line ${c} x1="${this.opts.guidelineIndent}" y1="${h}" x2="${r-this.opts.guidelineIndent}" y2="${h}"/>`}o+=`<g ${d}>`;for(let h of this.lines)if(h.length===1){let c=h[0],g=e/2;o+=`<circle cx="${c.x}" cy="${c.y}" r="${g}" fill="${i}"/>`}else if(h.length>1){let c=h.map(g=>`${g.x},${g.y}`).join(" ");o+=`<polyline points="${c}" />`}return o+="</g></svg>",o}catch(t){return console.error("SignaturePad: Error exporting to SVG:",t),"<svg></svg>"}}draw(t){if(!t)throw new Error("SignaturePad: No data provided to draw()");this.clear(!1);try{switch(typeof t){case"string":this._handleStringData(t);break;case"object":this._handleObjectData(t);break;default:throw new Error(`Unsupported data type: ${typeof t}`)}this._triggerChange()}catch(i){throw console.error("SignaturePad: Error drawing data:",i),this.clear(!1),i}return this}_handleStringData(t){let i=t.trim();if(i.startsWith("data:"))this._drawDataURL(i);else if(i.startsWith("<svg"))this._drawSVG(i);else try{let e=JSON.parse(i);this._handleObjectData(e)}catch{throw new Error("Invalid JSON data provided")}}_handleObjectData(t){if(!t||typeof t!="object")throw new Error("Invalid object data provided");if(Array.isArray(t.lines))this.lines=t.lines.map(i=>Array.isArray(i)?i.filter(e=>e&&typeof e.x=="number"&&typeof e.y=="number"):[]),this._redrawLines();else throw new Error('Object data must contain a "lines" array')}_drawDataURL(t){let i=new Image;i.onload=()=>{try{this.ctx.drawImage(i,0,0)}catch(e){console.error("SignaturePad: Error drawing image:",e)}},i.onerror=()=>{console.error("SignaturePad: Failed to load image from data URL")},i.src=t}_drawSVG(t){try{let e=new DOMParser().parseFromString(t,"image/svg+xml");if(e.querySelector("parsererror"))throw new Error("Invalid SVG data");this._parseSVG(e)}catch(i){throw new Error(`Failed to parse SVG: ${i.message}`)}}_parseSVG(t){let i=Array.from(t.querySelectorAll("polyline")),e=Array.from(t.querySelectorAll("circle"));this.lines=[];for(let s of i){let r=s.getAttribute("points");if(!r)continue;let n=r.trim().split(/\s+/).map(l=>{let[d,o]=l.split(",").map(Number);return isNaN(d)||isNaN(o)?null:{x:d,y:o}}).filter(Boolean);n.length>0&&this.lines.push(n)}for(let s of e){let r=parseFloat(s.getAttribute("cx")),n=parseFloat(s.getAttribute("cy"));!isNaN(r)&&!isNaN(n)&&this.lines.push([{x:r,y:n}])}this._redrawLines()}setColor(t){if(typeof t!="string"||!t.trim())throw new Error("SignaturePad: Color must be a non-empty string");return this.opts.color=t,this._redrawLines(),this._triggerChange(),this}setGuidelineColor(t){if(typeof t!="string"||!t.trim())throw new Error("SignaturePad: Guideline color must be a non-empty string");return this.opts.guidelineColor=t,this._redrawLines(),this._triggerChange(),this}setBackgroundColor(t){if(typeof t!="string"||!t.trim())throw new Error("SignaturePad: Background color must be a non-empty string");return this.opts.background=t,this._redrawLines(),this._triggerChange(),this}setThickness(t){if(typeof t!="number"||t<.1)throw new Error("SignaturePad: Thickness must be a number >= 0.1");return this.opts.thickness=t,this._redrawLines(),this._triggerChange(),this}toggleGuideline(t){return this.opts.guideline=t!==void 0?t:!this.opts.guideline,this._redrawLines(),this._triggerChange(),this}getBounds(){if(this.isEmpty())return{minX:0,minY:0,maxX:0,maxY:0,width:0,height:0};let t=1/0,i=1/0,e=-1/0,s=-1/0;for(let r of this.lines)for(let n of r)t=Math.min(t,n.x),i=Math.min(i,n.y),e=Math.max(e,n.x),s=Math.max(s,n.y);return{minX:t,minY:i,maxX:e,maxY:s,width:e-t,height:s-i}}destroy(){this.canvas&&(this.canvas.removeEventListener("pointerdown",this._startStroke),this.canvas.removeEventListener("pointermove",this._continueStroke)),this._resizeTimeout&&clearTimeout(this._resizeTimeout),window.removeEventListener("resize",this._debouncedResize),this.container=null,this.canvas=null,this.ctx=null,this.lines=null,this.redoStack=null,this.opts=null}},S=p;return v(_);})();
/**
 * Niel Blanca / SignaturePad.js v1.2.0
 * --------------------------------------------------------
 * Custom lightweight signature pad with undo, redo, resize, sync,
 * dynamic color updates, and SVG/PNG/JPG/JSON export support.
 *
 * Features:
 * - Smooth bezier curve drawing
 * - Touch pressure sensitivity
 * - Performance optimized
 * - Modern ES6+ implementation
 * - Comprehensive error handling
 * - Event system with custom events
 * - Method chaining support
 *
 * @version     1.2.0
 * @author      Niel Blanca
 * @license     MIT (https://opensource.org/licenses/MIT)
 * --------------------------------------------------------
 */
